name: run client tests
run-name: ${{ github.actor }} is running client tests
on:
  push:
#   pull_request:
#     paths:
#       - "client/**"
jobs:
  Test-client:
    runs-on: ubuntu-latest
    # env:
    #   CREDENTIALS_PATH: credentials.json
    steps:
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."

      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-node@v4
        with:
          node-version: 21

      - name: install client dependencies
        working-directory: client
        run: npm ci

      - name: run tests
        run: npm run test

    #   - run: npm ci
    #   - run: npm run test

    #   - name: Build Java with Gradle
    #     working-directory: server
    #     run: ./gradlew build

    #   - name: Verify JAR file exists
    #     working-directory: server
    #     run: |
    #       ls build/libs
    #       if [ ! -f build/libs/*.jar ]; then
    #         echo "JAR file not found!"
    #         exit 1
    #       fi

    #   - name: Log in to Docker Hub
    #     uses: docker/login-action@v2
    #     with:
    #       username: ${{secrets.DOCKER_USERNAME}}
    #       password: ${{secrets.DOCKER_PASSWORD}}

    #   - name: Build Docker Image
    #     run: docker build -t ${{ secrets.DOCKER_USERNAME }}/booking-app-java-api:${{ github.sha }} -t ${{ secrets.DOCKER_USERNAME }}/booking-app-java-api:latest -f server/Dockerfile .
    #     # run: docker build -t ${{ secrets.DOCKER_USERNAME }}/booking-app-java-api:${{ github.ref_name }} -f server/Dockerfile .

    #   - name: Push Docker Image
    #     run: "docker push -a ${{ secrets.DOCKER_USERNAME }}/booking-app-java-api"
    #     # run: "docker push ${{ secrets.DOCKER_USERNAME }}/booking-app-java-api:${{ github.ref_name }}"
    # maybe on merge create a latest tag build

    #- run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
    #- run: echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."
    #- name: List files in the repository
    # run: |
    # ls ${{ github.workspace }}
    # - run: echo "üçè This job's status is ${{ job.status }}."
    # pushtest again
